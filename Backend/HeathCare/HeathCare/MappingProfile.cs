using AutoMapper;
using HeathCare.DTOs;
using HeathCare.DTOs.HeathCare.DTOs;
using HeathCare.Models;
using HeathCare.Models.HeathCare.Models;

namespace HeathCare
{
    public class MappingProfile : Profile
    {
        public MappingProfile()
        {
            // Department mapping
            CreateMap<Department, DepartmentDTO>()
                    .ForMember(dest => dest.DoctorCount,
                               opt => opt.MapFrom(src => src.Doctors.Count));
            CreateMap<DepartmentCreateDTO, Department>()
                    .ForMember(dest => dest.ImagePath, opt => opt.Ignore()); // Will be set manually

            CreateMap<DepartmentUpdateDTO, Department>()
                   .ForMember(dest => dest.ImagePath, opt => opt.Ignore()); // Will be set manually

            // Doctor mappings
            CreateMap<Doctor, DoctorDTO>()
                .ForMember(dest => dest.DepartmentName,
                           opt => opt.MapFrom(src => src.Department.Name));

            CreateMap<DoctorCreateDTO, Doctor>();
            CreateMap<DoctorUpdateDTO, Doctor>();

            // Add other mappings as needed
            CreateMap<DepartmentCreateDTO, Department>();
            CreateMap<DepartmentUpdateDTO, Department>();

            // Blog mappings
            CreateMap<BlogCreateDTO, Blog>()
                .ForMember(dest => dest.ImagePath, opt => opt.Ignore()) // Will be set manually
                .ForMember(dest => dest.CreatedAt, opt => opt.MapFrom(src => DateTime.UtcNow))
                .ForMember(dest => dest.Id, opt => opt.Ignore()); // Will be generated by database

            CreateMap<Blog, BlogDTO>();
            CreateMap<BlogUpdateDTO, Blog>();

            CreateMap<Booking, BookingDTO>()
                .ForMember(dest => dest.DepartmentName,
                           opt => opt.MapFrom(src => src.Department.Name));

            CreateMap<BookingCreateDTO, Booking>();
            CreateMap<BookingUpdateDTO, Booking>();


            CreateMap<ContactCreateDTO, Contact>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) // Will be generated by database
                .ForMember(dest => dest.CreatedAt, opt => opt.MapFrom(_ => DateTime.UtcNow)); // Set current time

        }
    }
}